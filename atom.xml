<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaliBlogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-10-29T09:28:41.041Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Dali</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue之seekcy开发历程记录1</title>
    <link href="http://yoursite.com/2020/10/29/vue%E4%B9%8Bseekcy%E5%BC%80%E5%8F%91%E5%8E%86%E7%A8%8B%E8%AE%B0%E5%BD%951/"/>
    <id>http://yoursite.com/2020/10/29/vue%E4%B9%8Bseekcy%E5%BC%80%E5%8F%91%E5%8E%86%E7%A8%8B%E8%AE%B0%E5%BD%951/</id>
    <published>2020-10-29T09:23:30.000Z</published>
    <updated>2020-10-29T09:28:41.041Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;Router&quot;&gt;&lt;a href=&quot;#Router&quot; class=&quot;headerlink&quot; title=&quot;Router&quot;&gt;&lt;/a&gt;Router&lt;/h2&gt;&lt;h3 id=&quot;解决vue路由跳转未匹配路径时出现空白页的问题&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>计算机设置相关</title>
    <link href="http://yoursite.com/2020/10/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AE%BE%E7%BD%AE%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2020/10/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AE%BE%E7%BD%AE%E7%9B%B8%E5%85%B3/</id>
    <published>2020-10-29T09:18:44.000Z</published>
    <updated>2020-10-29T09:22:46.772Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;设置与关闭自启动软件&quot;&gt;&lt;a href=&quot;#设置与关闭自启动软件&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="计算机" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="计算机" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>flex</title>
    <link href="http://yoursite.com/2020/10/28/flex/"/>
    <id>http://yoursite.com/2020/10/28/flex/</id>
    <published>2020-10-28T00:57:15.059Z</published>
    <updated>2020-09-17T06:46:24.009Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;父级属性&lt;/p&gt;
&lt;h3 id=&quot;flex-direction&quot;&gt;&lt;a href=&quot;#flex-direction&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>js之深拷贝和浅拷贝方法合集</title>
    <link href="http://yoursite.com/2020/10/20/js%E4%B9%8B%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/"/>
    <id>http://yoursite.com/2020/10/20/js%E4%B9%8B%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/</id>
    <published>2020-10-20T09:37:37.000Z</published>
    <updated>2020-10-20T09:53:56.355Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;js中的堆和栈&quot;&gt;&lt;a href=&quot;#js中的堆和栈&quot; class=&quot;headerlink&quot; title=&quot;js中的堆和栈&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/cherishnow/p/10901586.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;js中的堆和栈&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;一-栈和堆&quot;&gt;&lt;a href=&quot;#一-栈和堆&quot; class=&quot;headerlink&quot; title=&quot;一.栈和堆&quot;&gt;&lt;/a&gt;一.栈和堆&lt;/h3&gt;&lt;p&gt;栈(stack)：栈会自动分配内存空间，会自动释放，存放基本类型，简单的数据段，占据固定大小的空间。（基本类型：String，Number，Boolean，Null，Undefined）&lt;br&gt;堆(heap)：动态分配的内存，大小不定也不会自动释放，存放引用类型，指那些可能由多个值构成的对象，保存在堆内存中，包含引用类型的变量，实际上保存的不是变量本身，而是指向该对象的指针。（引用类型：Function，Array，Object）&lt;/p&gt;
&lt;h3 id=&quot;二-区别&quot;&gt;&lt;a href=&quot;#二-区别&quot; class=&quot;headerlink&quot; title=&quot;二.区别&quot;&gt;&lt;/a&gt;二.区别&lt;/h3&gt;&lt;p&gt;栈：所有在方法中定义的变量都是放在栈内存中，随着方法的执行结束，这个方法的内存栈也自然销毁。&lt;br&gt;优点：存取速度比堆快，仅次于直接位于CPU中的寄存器，数据可以共享；&lt;br&gt;缺点：存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。&lt;br&gt;堆：堆内存中的对象不会随方法的结束而销毁，即使方法结束后，这个对象还可能被另一个引用变量所引用(参数传递)。创建对象是为了反复利用，这个对象将被保存到运行时数据区。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="深拷贝浅拷贝" scheme="http://yoursite.com/tags/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发之互相跳转</title>
    <link href="http://yoursite.com/2020/10/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BA%92%E7%9B%B8%E8%B7%B3%E8%BD%AC/"/>
    <id>http://yoursite.com/2020/10/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BA%92%E7%9B%B8%E8%B7%B3%E8%BD%AC/</id>
    <published>2020-10-10T07:42:12.000Z</published>
    <updated>2020-10-20T05:31:18.602Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/wangmaoling/p/11764651.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微信小程序与内嵌webview之间来回跳转的几点总结，以及二维码的使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;截止到发稿小程序支持的功能，后续如果小程序更新在完善文稿。&lt;/p&gt;
&lt;h3 id=&quot;小程序可以内嵌组件跳转到h5页面&quot;&gt;&lt;a href=&quot;#小程序可以内嵌组件跳转到h5页面&quot; class=&quot;headerlink&quot; title=&quot;小程序可以内嵌组件跳转到h5页面&quot;&gt;&lt;/a&gt;小程序可以内嵌组件跳转到h5页面&lt;/h3&gt;&lt;p&gt;\1. 小程序可以内嵌组件跳转到h5页面，前提是在小程序后台配置相应的业务域名。新打开的h5页面会替代小程序组件内的其它组件，即为h5不能与小程序组件共存显示在屏幕上。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;web-view src&amp;#x3D;&amp;quot;&amp;#123;&amp;#123;content&amp;#125;&amp;#125;&amp;quot;&amp;gt;&amp;lt;&amp;#x2F;web-view&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/categories/soft/"/>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="webview" scheme="http://yoursite.com/tags/webview/"/>
    
      <category term="跳转" scheme="http://yoursite.com/tags/%E8%B7%B3%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发之下载保存图片</title>
    <link href="http://yoursite.com/2020/10/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E4%B8%8B%E8%BD%BD%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2020/10/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E4%B8%8B%E8%BD%BD%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/</id>
    <published>2020-10-10T07:15:19.000Z</published>
    <updated>2020-10-15T10:06:56.412Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;下载pdf&quot;&gt;&lt;a href=&quot;#下载pdf&quot; class=&quot;headerlink&quot; title=&quot;下载pdf&quot;&gt;&lt;/a&gt;下载pdf&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;downloadFile: function(e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let url &amp;#x3D; e.currentTarget.dataset.url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wx.downloadFile(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        success: function(res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var filePath &amp;#x3D; res.tempFilePath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            wx.openDocument(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                filePath: filePath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fileType:&amp;quot;pdf&amp;quot;,&amp;#x2F;&amp;#x2F;必填&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                success: function(res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    console.log(&amp;#39;打开文档成功&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fail: function(res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    console.log(res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                complete: function(res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    console.log(res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fail: function(res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            console.log(&amp;#39;文件下载失败&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        complete: function(res) &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/categories/soft/"/>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>js之loadshJs</title>
    <link href="http://yoursite.com/2020/10/09/js%E4%B9%8BloadshJs/"/>
    <id>http://yoursite.com/2020/10/09/js%E4%B9%8BloadshJs/</id>
    <published>2020-10-09T09:54:03.000Z</published>
    <updated>2020-10-09T10:17:49.048Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;Lodash是一个著名的javascript原生库，不需要引入其他第三方依赖。是一个意在提高开发者效率,提高JS原生方法性能的JS库。简单的说就是，很多方法lodash已经帮你写好了，直接调用就行，不用自己费尽心思去写了，而且可以统一方法的一致性。Lodash使用了一个简单的 _ 符号，就像Jquery的 $ 一样，十分简洁。&lt;br&gt; 类似的还有Underscore.js和Lazy.js&lt;/p&gt;
&lt;h4 id=&quot;支持&quot;&gt;&lt;a href=&quot;#支持&quot; class=&quot;headerlink&quot; title=&quot;支持&quot;&gt;&lt;/a&gt;支持&lt;/h4&gt;&lt;p&gt;chrome 43往上&lt;br&gt; Firefox 38往上&lt;br&gt; IE 6-11&lt;br&gt; MS Edge&lt;br&gt; Safari 5往上&lt;br&gt; （几乎涵盖现在市面上可以见到的大部分浏览器）&lt;/p&gt;
&lt;h4 id=&quot;如何安装&quot;&gt;&lt;a href=&quot;#如何安装&quot; class=&quot;headerlink&quot; title=&quot;如何安装&quot;&gt;&lt;/a&gt;如何安装&lt;/h4&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>小程序开发之阿拉丁统计平台</title>
    <link href="http://yoursite.com/2020/10/09/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E9%98%BF%E6%8B%89%E4%B8%81%E7%BB%9F%E8%AE%A1%E5%B9%B3%E5%8F%B0/"/>
    <id>http://yoursite.com/2020/10/09/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B9%8B%E9%98%BF%E6%8B%89%E4%B8%81%E7%BB%9F%E8%AE%A1%E5%B9%B3%E5%8F%B0/</id>
    <published>2020-10-09T02:58:52.000Z</published>
    <updated>2020-10-16T06:05:56.253Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关键步骤：&quot;&gt;&lt;a href=&quot;#关键步骤：&quot; class=&quot;headerlink&quot; title=&quot;关键步骤：&quot;&gt;&lt;/a&gt;&lt;strong&gt;关键步骤：&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;注册/登录统计平台&lt;/li&gt;
&lt;li&gt;创建小程序&lt;/li&gt;
&lt;li&gt;接入SDK&lt;/li&gt;
&lt;li&gt;检测SDK&lt;/li&gt;
&lt;li&gt;集成成功&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="soft" scheme="http://yoursite.com/categories/soft/"/>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="阿拉丁" scheme="http://yoursite.com/tags/%E9%98%BF%E6%8B%89%E4%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>js数组方法之sort</title>
    <link href="http://yoursite.com/2020/09/30/js%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E4%B9%8Bsort/"/>
    <id>http://yoursite.com/2020/09/30/js%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E4%B9%8Bsort/</id>
    <published>2020-09-30T03:16:57.000Z</published>
    <updated>2020-10-16T03:22:47.692Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;总之：return -1 和return b-a是降序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总之：return 1 和return a-b是升序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/strong&gt; 方法用于对数组的元素进行排序,并返回数组。默认排序顺序是根据字符串&lt;strong&gt;&lt;code&gt;Unicode&lt;/code&gt;&lt;/strong&gt;码点。&lt;br&gt;语法：arrayObject.sort(sortby)；参数sortby可选。规定排序顺序。必须是函数。&lt;br&gt;注：如果调用该方法时没有使用参数，将按字母顺序对数组中的元素进行排序，说得更精确点，是按照字符编码的顺序进行排序。要实现这一点，首先应把数组的元素都转换成字符串（如有必要），以便进行比较。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="sort" scheme="http://yoursite.com/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>js之防抖和节流</title>
    <link href="http://yoursite.com/2020/09/29/js%E4%B9%8B%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/"/>
    <id>http://yoursite.com/2020/09/29/js%E4%B9%8B%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/</id>
    <published>2020-09-29T07:55:43.000Z</published>
    <updated>2020-09-29T08:00:55.898Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;防抖&quot;&gt;&lt;a href=&quot;#防抖&quot; class=&quot;headerlink&quot; title=&quot;防抖&quot;&gt;&lt;/a&gt;防抖&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在事件被触发n秒后再执行回调，如果在这n秒内又被触发，则重新计时。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;举个例子：&lt;br&gt; 当鼠标移动到一个div上时，div的内容一直在更新，如果不用防抖处理，效果如下图&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var mydiv &amp;#x3D; document.getElementById(&amp;#39;mydiv&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       let count &amp;#x3D; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       function myEvent()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           mydiv.innerText &amp;#x3D; count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mydiv.addEventListener(&amp;#39;mouseover&amp;#39;, function(event)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           myEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>js之快速理解i闭包</title>
    <link href="http://yoursite.com/2020/09/29/js%E4%B9%8B%E5%BF%AB%E9%80%9F%E7%90%86%E8%A7%A3i%E9%97%AD%E5%8C%85/"/>
    <id>http://yoursite.com/2020/09/29/js%E4%B9%8B%E5%BF%AB%E9%80%9F%E7%90%86%E8%A7%A3i%E9%97%AD%E5%8C%85/</id>
    <published>2020-09-29T07:34:52.000Z</published>
    <updated>2020-09-29T07:57:30.760Z</updated>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F; 累加器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function counter() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#x2F;&amp;#x2F; 秒数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  let second &amp;#x3D; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  function doCounter() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#x2F;&amp;#x2F; 到达10秒后停止&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (second &amp;#x3D;&amp;#x3D;&amp;#x3D; 10) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      clearInterval(recordSecond);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      console.log(&amp;#39;计时结束!&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    second +&amp;#x3D; 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;#96;$&amp;#123;second&amp;#125;秒&amp;#96;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return doCounter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F; 得到累加器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const doCounterFn &amp;#x3D; counter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const recordSecond &amp;#x3D; setInterval(function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#x2F;&amp;#x2F; 调用累加器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  doCounterFn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, 1000);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="闭包" scheme="http://yoursite.com/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>es6之arrayFrom</title>
    <link href="http://yoursite.com/2020/09/28/es6%E4%B9%8BarrayFrom/"/>
    <id>http://yoursite.com/2020/09/28/es6%E4%B9%8BarrayFrom/</id>
    <published>2020-09-28T02:43:20.000Z</published>
    <updated>2020-10-10T08:52:39.872Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Array.from()方法就是将一个类数组对象或者可遍历对象转换成一个真正的数组。&lt;/p&gt;
&lt;p&gt;　　那么什么是类数组对象呢？所谓类数组对象，最基本的要求就是具有length属性的对象。&lt;/p&gt;
&lt;p&gt;　　1、将类数组对象转换为真正数组：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let arrayLike &amp;#x3D; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    0: &amp;#39;tom&amp;#39;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1: &amp;#39;65&amp;#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    2: &amp;#39;男&amp;#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    3: [&amp;#39;jane&amp;#39;,&amp;#39;john&amp;#39;,&amp;#39;Mary&amp;#39;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#39;length&amp;#39;: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let arr &amp;#x3D; Array.from(arrayLike)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(arr) &amp;#x2F;&amp;#x2F; [&amp;#39;tom&amp;#39;,&amp;#39;65&amp;#39;,&amp;#39;男&amp;#39;,[&amp;#39;jane&amp;#39;,&amp;#39;john&amp;#39;,&amp;#39;Mary&amp;#39;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;　　那么，如果将上面代码中length属性去掉呢？实践证明，答案会是一个长度为0的空数组。&lt;/p&gt;
&lt;p&gt;　　这里将代码再改一下，就是具有length属性，但是对象的属性名不再是数字类型的，而是其他字符串型的，代码如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="es6" scheme="http://yoursite.com/categories/es6/"/>
    
    
      <category term="es6" scheme="http://yoursite.com/tags/es6/"/>
    
      <category term="arrayFrom" scheme="http://yoursite.com/tags/arrayFrom/"/>
    
  </entry>
  
  <entry>
    <title>this之常见的四种用法</title>
    <link href="http://yoursite.com/2020/09/27/this%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2020/09/27/this%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%94%A8%E6%B3%95/</id>
    <published>2020-09-27T08:04:03.000Z</published>
    <updated>2020-09-27T10:10:49.667Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span style=&quot;color:red;&quot;&gt;箭头函数的this指向window！！！！！！！！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1.在一般函数方法中使用 this 指代全局对象&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function test()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　this.x &amp;#x3D; 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　alert(this.x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test(); &amp;#x2F;&amp;#x2F; 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="this" scheme="http://yoursite.com/tags/this/"/>
    
  </entry>
  
  <entry>
    <title>axios之get和post</title>
    <link href="http://yoursite.com/2020/09/27/axios%E4%B9%8Bget%E5%92%8Cpost/"/>
    <id>http://yoursite.com/2020/09/27/axios%E4%B9%8Bget%E5%92%8Cpost/</id>
    <published>2020-09-27T03:04:09.000Z</published>
    <updated>2020-09-28T02:48:41.763Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;1.get传参方式是通过地址栏URL传递，是可以直接看到get传递的参数，post传参方式参数URL不可见，get把请求的数据在URL后通过？连接，通过&amp;amp;进行参数分割。psot将参数存放在HTTP的包体内&lt;/p&gt;
&lt;p&gt;2.get传递数据是通过URL进行传递，对传递的数据长度是受到URL大小的限制，URL最大长度是2048个字符。post没有长度限制&lt;/p&gt;
&lt;p&gt;3.get后退不会有影响，post后退会重新进行提交&lt;/p&gt;
&lt;p&gt;4.get请求可以被缓存，post不可以被缓存&lt;/p&gt;
&lt;p&gt;5.get请求只URL编码，post支持多种编码方式&lt;/p&gt;
&lt;p&gt;6.get请求的记录会留在历史记录中，post请求不会留在历史记录&lt;/p&gt;
&lt;p&gt;7.get只支持ASCII字符，post没有字符类型限制&lt;/p&gt;
&lt;h3 id=&quot;什么是GET和POST请求&quot;&gt;&lt;a href=&quot;#什么是GET和POST请求&quot; class=&quot;headerlink&quot; title=&quot;什么是GET和POST请求&quot;&gt;&lt;/a&gt;什么是GET和POST请求&lt;/h3&gt;&lt;p&gt;GET：向指定路径资源发送请求，通常用于获取数据&lt;/p&gt;
&lt;p&gt;POST：向指定路径资源提交数据进行处理请求，通常用于提交表单或者上传文件&lt;/p&gt;
&lt;h3 id=&quot;GET和POST请求的区别&quot;&gt;&lt;a href=&quot;#GET和POST请求的区别&quot; class=&quot;headerlink&quot; title=&quot;GET和POST请求的区别&quot;&gt;&lt;/a&gt;GET和POST请求的区别&lt;/h3&gt;&lt;p&gt;1，GET一般是从服务器上获取数据，POST是向服务器提交数据。&lt;/p&gt;
&lt;p&gt;2，GET通过URL提交数据，数据在URL中可以看到，POST则是在HEADER内提交。&lt;/p&gt;
&lt;p&gt;3，GET提交的数据不能大于2KB，而POST不受限制。&lt;/p&gt;
&lt;p&gt;4，GET数据容易泄露，POST较为安全&lt;/p&gt;
    
    </summary>
    
    
      <category term="axios" scheme="http://yoursite.com/categories/axios/"/>
    
      <category term="vue" scheme="http://yoursite.com/categories/axios/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
      <category term="get" scheme="http://yoursite.com/tags/get/"/>
    
      <category term="post" scheme="http://yoursite.com/tags/post/"/>
    
  </entry>
  
  <entry>
    <title>js之对象的方法合集</title>
    <link href="http://yoursite.com/2020/09/25/js%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/"/>
    <id>http://yoursite.com/2020/09/25/js%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/</id>
    <published>2020-09-25T09:40:57.000Z</published>
    <updated>2020-09-28T08:47:47.758Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Object构造方法&quot;&gt;&lt;a href=&quot;#Object构造方法&quot; class=&quot;headerlink&quot; title=&quot;Object构造方法&quot;&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;构造方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将所有可枚举的自身属性的值从一个或多个源对象复制到目标对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用指定的原型对象和属性创建一个新对象。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="对象的方法" scheme="http://yoursite.com/tags/%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>react之井字棋</title>
    <link href="http://yoursite.com/2020/09/25/react%E4%B9%8B%E4%BA%95%E5%AD%97%E6%A3%8B/"/>
    <id>http://yoursite.com/2020/09/25/react%E4%B9%8B%E4%BA%95%E5%AD%97%E6%A3%8B/</id>
    <published>2020-09-25T05:18:36.000Z</published>
    <updated>2020-09-27T10:19:37.178Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;见下文&lt;/p&gt;
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/categories/react/"/>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="井字棋" scheme="http://yoursite.com/tags/%E4%BA%95%E5%AD%97%E6%A3%8B/"/>
    
  </entry>
  
  <entry>
    <title>js之构造函数原型实例</title>
    <link href="http://yoursite.com/2020/09/25/js%E4%B9%8B%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8E%9F%E5%9E%8B%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2020/09/25/js%E4%B9%8B%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8E%9F%E5%9E%8B%E5%AE%9E%E4%BE%8B/</id>
    <published>2020-09-25T02:05:09.000Z</published>
    <updated>2020-09-27T10:14:01.734Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先用构造函数（一会解释什么叫做构造函数）的方法创建一个对象&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; M=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=&lt;span class=&quot;string&quot;&gt;&#39;123&#39;&lt;/span&gt;&amp;#125;   &lt;span class=&quot;comment&quot;&gt;//ƒ ()&amp;#123;this.name=&#39;123&#39;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a1=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; M()  &lt;span class=&quot;comment&quot;&gt;//M &amp;#123;name: &quot;123&quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a1.name)  &lt;span class=&quot;comment&quot;&gt;//123&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;构造函数：&lt;/strong&gt;现在M就是构造函数，因为他被new过了！–在js中，只要是被new过的函数都被成为构造函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实例对象：&lt;/strong&gt;现在a1就叫做实例，因为他是被new出来的！–在js中，只要是被new出来的对象都叫做实例对象。也叫实例。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原型对象：&lt;/strong&gt;现在M.prototype就是原型对象，构造函数函数被创建出来的时候，天生就带一个prototype属性，而这个属性里面的东西就叫原型对象。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="构造函数" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
    
      <category term="原型对象" scheme="http://yoursite.com/tags/%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="实例对象" scheme="http://yoursite.com/tags/%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>webpack4最全解析</title>
    <link href="http://yoursite.com/2020/09/23/webpack4%E6%9C%80%E5%85%A8%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2020/09/23/webpack4%E6%9C%80%E5%85%A8%E8%A7%A3%E6%9E%90/</id>
    <published>2020-09-23T11:21:53.000Z</published>
    <updated>2020-09-27T10:13:33.050Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;命令合集&quot;&gt;&lt;a href=&quot;#命令合集&quot; class=&quot;headerlink&quot; title=&quot;命令合集&quot;&gt;&lt;/a&gt;命令合集&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;webpack-cli可以让我们在命令行里输入webpack相关命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;本地安装webpack webpack-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm webpack webpack-cli -D &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;生成默认的packpage.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看旧的版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm info webpack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;全局安装翻译某个js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webpack index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;本地安装翻译某个js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx webpack index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看本地安装的webpack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx webpack -v &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更改配置文件(由默认的webpack.config.js改成webpackconfig.js)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx webpack --config webpackconfig.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="webpack4" scheme="http://yoursite.com/categories/webpack4/"/>
    
    
      <category term="webpack4" scheme="http://yoursite.com/tags/webpack4/"/>
    
  </entry>
  
  <entry>
    <title>js之Math</title>
    <link href="http://yoursite.com/2020/09/23/js%E4%B9%8BMath/"/>
    <id>http://yoursite.com/2020/09/23/js%E4%B9%8BMath/</id>
    <published>2020-09-23T06:33:58.000Z</published>
    <updated>2020-09-27T10:13:01.060Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Math-对象方法&quot;&gt;&lt;a href=&quot;#Math-对象方法&quot; class=&quot;headerlink&quot; title=&quot;Math 对象方法&quot;&gt;&lt;/a&gt;Math 对象方法&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Math" scheme="http://yoursite.com/categories/Math/"/>
    
    
      <category term="Math" scheme="http://yoursite.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>vue之惯性滚动动效</title>
    <link href="http://yoursite.com/2020/09/23/vue%E4%B9%8B%E6%83%AF%E6%80%A7%E6%BB%9A%E5%8A%A8%E5%8A%A8%E6%95%88/"/>
    <id>http://yoursite.com/2020/09/23/vue%E4%B9%8B%E6%83%AF%E6%80%A7%E6%BB%9A%E5%8A%A8%E5%8A%A8%E6%95%88/</id>
    <published>2020-09-23T05:31:19.000Z</published>
    <updated>2020-09-27T10:19:02.545Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;见下文&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="滚动" scheme="http://yoursite.com/tags/%E6%BB%9A%E5%8A%A8/"/>
    
  </entry>
  
</feed>
